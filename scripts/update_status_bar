#!/bin/bash

# Updates information in status bar.
# Called from .xinitrc

time_between_updates=5
time_between_stock_updates=600

source ~/scripts/grab_nyse_price_webscrape

# Ticker symbols to check prices of
symbols=(
    "SPOT"
    "TSLA"
)
prices=( )

# Prices of previous update
prev=( )

# Time of last update
last=0

# Updates the prices of ticker symbols listed above if:
# - It is the first run through the program
# OR
# - It is trading hours and its been 10 mins since last update
update_prices() {
    local time_info=( $(date +'%-H %u %s') )

    # "Destructure" time_info as hour, weekday, and seconds
    local hour=${time_info[0]}
    local weekday=${time_info[1]}
    local now=${time_info[2]}

    local first_run=$(( $last == 0 )) 
    local trading_hours=$(( weekday < 6 && hour >= 9 && hour < 16 && now - last > time_between_stock_updates )) 
    if (( first_run || trading_hours )); then
        echo "Updating prices"
        for (( i=0; i < ${#symbols[@]}; i++ )); do
            prev[$i]=${prices[$i]}
            prices[$i]=$(grab_nyse_price_webscrape ${symbols[$i]})
        done
        last=$now
    fi
}

update_status_bar() {
    # Build up this string
    local res=""
    local delim=" | "
    # push_status() {
    #     res+=$1
    #     res+=$delim
    # }

    # NYSE stock price 
    update_prices
    echo "Updated"
    for (( i=0; i < ${#symbols[@]}; i++ )); do
        # Choose plus or minus to indicate up or down
        #price_up=$(python -c "print(int(${prices[$i]} > ${prev[$i]:-0}))")
        #(( $price_up )) && sign='+' || sign='-'
        #res+="${symbols[$i]}: ${sign}${prices[$i]}"
        res+="${symbols[$i]}: ${prices[$i]}"
        res+=$delim
    done

    # Time & date
    res+=$(date +'%a %b %d %I:%M %p')
    res+=$delim

    # Wifi
    local wifi=$(netctl list \
        | grep \* \
        | sed 's/\*\s*\(.*\)/\1/'
    )
    if [[ $wifi != "" ]]; then
        res+=$wifi
        res+=$delim
    fi

    # Volume info
    local v_info=$(amixer get Master \
      | grep '\[o.*\]'  \
      | sed 's/.*\[\([0-9]\+%\)\].*\[\(o[nf]\+\)\].*/\1 \2/g' \
    )
    v_info=( $v_info ) # v_info as array, to "destructure"
    res+=${v_info[0]}
    res+=" "
    res+=${v_info[1]}
    res+=$delim

    # Battery info
    local b_info=$(acpi -b)
    local percent=$(echo $b_info | sed 's/.*\ \([0-9]*%\).*/\1/g')
    [[ $b_info =~ Charging ]] && res+="+"
    res+=$percent

    # Finally, update the status bar content
    xsetroot -name " $res "
}

while :
do
    update_status_bar
    sleep $time_between_updates
done

